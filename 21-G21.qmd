---
title: 'IGHV3-35'
execute:
  echo: false
  warning: false
  message: false
format: html
---
```{r}
source("functions.R")
```

```{r,echo=FALSE}
imgt_genes = 'IGHV3-35[*]'
## get group
g_group <- allele_db$func_group[grepl(imgt_genes, allele_db$or_allele)] %>% unique()
```

## Allele appearnce 

The group of `r paste0(imgt_genes ,"(", g_group, ")")` includes `r length(grep(g_group,allele_db$new_allele,value=T))` functional alleles within it.

This allele group is unique as two alleles are indicated to IGHV3-35 but only one of them is functional IGHV3-35\*02, while the other (IGHV3-35\*01) is an ORF allele

For each allele we counted the number of appearances across the population, any appearance was considered valid. 

```{r}
allele_appearance(data, g_group, allele_db)
```

## Group alignment

Based on the viewd alleles, we calculated the distance between the germline sequences.

```{r}
v_calls <- unique(data_frac[grepl(g_group,v_gene),call])

tagList(seq_align2(v_calls, allele_db, vgerms, g_group))
```

## Sequence depth

To examine the potential cutoff we observed the sequence depth for each allele

```{r}
tagList(sequence_depth(data, g_group, allele_db))
```

## Absolute cutoff

We set an initial cutoff of $0.01\%$ to determine the potential genotype priors. For this cutoff we examined the zygousity state, such as homozygousity, heterozygousity and so on.

```{=html}
 <iframe id="example1" src=" https://peresay.shinyapps.io/absolute_usage_app/?g_group=%22IGHVF2-G13%22" style="border: none; width: 100%; height: 720px" frameborder="0"></iframe>
```

### Allele specific cutoff

Observing the alleles frequencies we adapted the following thresholds

```{r}
DT::datatable(data.frame(thresholds = absolute_thresholds_dict[[g_group]]))
```


```{r}
#The graph below shows the allele-based individual genotype inference for this allele group.

#heatmap_alleles(data_ = data_frac, g_group, allele_db)%>%
#  layout(autosize = F)
```
